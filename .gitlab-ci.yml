image: trion/ng-cli-karma

stages:
  - tests
  - build
  - schedule

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

#####################################################################
## Install
#####################################################################

before_script:
  #- npm config set proxy http://[ip]:[port]
  #- npm config set https-proxy http://[ip]:[port]
  # Install dependencies only if node_module folder is not synced
  - npm check --integrity || npm install --pure-lockfile
   
#####################################################################
## Testing
#####################################################################

tests:
  stage: tests
  tags:
    - docker
    - angular
    - ngrx
  script:
    # Run all tests and collect coverage
    - npm run test:coverage
  # Report Jest coverage (can be different than SonarQube coverage)
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      # Expose coverage folder to be accessible by analysis jobs
      - coverage/
    expire_in: 1 day
  except:
    - schedules

#####################################################################
## Building
#####################################################################

build:
  stage: build
  tags:
    - docker
    - angular
    - ngrx
  script:
    # TODO configure semantic-release
    # Create a new release in Gitlab with CHANGELOG automaticaly generated from Git history
    #- node_modules/.bin/semantic-release
    # Build the app ready for production
    - npm run build
  artifacts:
    paths:
      # Expose app built artifacts to be accessible by other jobs
      - dist/
    expire_in: 2 day
  except:
    - schedules
    
#####################################################################
## Schedule
#####################################################################

audit:
  stage: schedule
  tags:
    - docker
    - angular
    - ngrx
  script:
    # Run security audit on dependencies
    - npm audit || true
    # If any "Critical" vulnerability is found, the job will fail
    - if [ "$(npm audit | sed -E -n 's/^.* ([0-9]{1,}) Critical.*$/\1/p')" -gt "0" ]; then exit 1; fi
  only:
    - schedules
